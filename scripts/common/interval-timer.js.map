{"version":3,"sources":["interval-timer.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","IntervalTimer","onTick","interval","reset","value","_tick","_this","_running","currentTime","Date","getTime","expected","_startTime","actual","error","correctedInterval","_timerId","setTimeout","start","_this2","offset","arguments","undefined","pause","_pauseTime","clearTimeout","resume","elapsedTick","remainingTick"],"mappings":"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","file":"interval-timer.js","sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* Repeatedly calls a function at given intervals in decomposeTime.\r\nSelf-corrects to generally stay in sync despite of timing inconsistencies.\r\nSkips executing the callback if the previous call hasn't finished yet. */\n\nvar IntervalTimer = function () {\n    function IntervalTimer(onTick, interval) {\n        _classCallCheck(this, IntervalTimer);\n\n        this.onTick = onTick;\n        this.interval = interval;\n        this.reset();\n    }\n\n    _createClass(IntervalTimer, [{\n        key: \"_tick\",\n        value: function _tick() {\n            var _this = this;\n\n            if (this._running) {\n                this.onTick();\n\n                var currentTime = new Date().getTime();\n                var expected = this._startTime % this.interval;\n                var actual = currentTime % this.interval;\n                var error = actual - expected;\n                var correctedInterval = this.interval - error;\n                //console.log(\"decomposeTime: \" + new Date(currentTime).getMilliseconds().toString() + \" error: \" + error.toString() + \" interval: \" + correctedInterval.toString());\n\n                this._timerId = setTimeout(function () {\n                    return _this._tick();\n                }, correctedInterval);\n            }\n        }\n    }, {\n        key: \"start\",\n        value: function start() {\n            var _this2 = this;\n\n            var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n            this._running = true;\n            this._startTime = new Date().getTime() + offset;\n            this._timerId = setTimeout(function () {\n                return _this2._tick();\n            }, offset);\n        }\n    }, {\n        key: \"pause\",\n        value: function pause() {\n            this._running = false;\n            this._pauseTime = new Date().getTime();\n            clearTimeout(this._timerId);\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            this._running = true;\n            var elapsedTick = (this._pauseTime - this._startTime) % this.interval;\n            var remainingTick = this.interval - elapsedTick;\n            this.start(remainingTick);\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this._running = false;\n            this._timerId = null;\n            this._startTime = null;\n            this._pauseTime = null;\n            clearTimeout(this._timerId);\n        }\n    }]);\n\n    return IntervalTimer;\n}();\n//# sourceMappingURL=interval-timer.js.map"]}