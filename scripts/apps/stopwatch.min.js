"use strict";var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(a){return typeof a}:function(a){return a&&typeof Symbol==="function"&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a};var _createClass=function(){function a(e,c){for(var b=0;b<c.length;b++){var d=c[b];d.enumerable=d.enumerable||false;d.configurable=true;if("value" in d){d.writable=true}Object.defineProperty(e,d.key,d)}}return function(d,b,c){if(b){a(d.prototype,b)}if(c){a(d,c)}return d}}();var _get=function get(b,e,d){if(b===null){b=Function.prototype}var f=Object.getOwnPropertyDescriptor(b,e);if(f===undefined){var c=Object.getPrototypeOf(b);if(c===null){return undefined}else{return get(c,e,d)}}else{if("value" in f){return f.value}else{var a=f.get;if(a===undefined){return undefined}return a.call(d)}}};function _classCallCheck(a,b){if(!(a instanceof b)){throw new TypeError("Cannot call a class as a function")}}function _possibleConstructorReturn(a,b){if(!a){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return b&&((typeof b==="undefined"?"undefined":_typeof(b))==="object"||typeof b==="function")?b:a}function _inherits(b,a){if(typeof a!=="function"&&a!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof a==="undefined"?"undefined":_typeof(a)))}b.prototype=Object.create(a&&a.prototype,{constructor:{value:b,enumerable:false,writable:true,configurable:true}});if(a){Object.setPrototypeOf?Object.setPrototypeOf(b,a):b.__proto__=a}}var Stopwatch=function(d){_inherits(b,d);function b(){_classCallCheck(this,b);return _possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).apply(this,arguments))}_createClass(b,[{key:"reset",value:function c(){this._lapTime=null;_get(b.prototype.__proto__||Object.getPrototypeOf(b.prototype),"reset",this).call(this)}},{key:"start",value:function e(){this._lapTime=0;_get(b.prototype.__proto__||Object.getPrototypeOf(b.prototype),"start",this).call(this)}},{key:"lap",value:function a(){var f=this.getTime();var g=f-this._lapTime;this._lapTime=f;return{total:f,lap:g}}}]);return b}(BaseTimer);